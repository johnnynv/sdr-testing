# SPDX-FileCopyrightText: Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

services:
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    environment:
      - METRICS_STORAGE_TYPE=prometheus
      - PROMETHEUS_SERVER_URL=http://prometheus:9090
      - SPAN_STORAGE_TYPE=cassandra

    command:
    - "--cassandra.servers=cassandra"
    - "--cassandra.keyspace=jaeger_v1_dc1"
    - "--query.base-path=/jaeger/ui"
    ports:
      - "16686:16686"
      - "14268:14268"
    depends_on:
      cassandra-schema:
        condition: service_started
      cassandra:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-qO-", "localhost:14269"]
      interval: 30s
      timeout: 120s
      retries: 1000
      start_period: 240s

  cassandra:
    image: cassandra:4.0
    container_name: cassandra
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/volumes_cassandra/cassandra:/var/lib/cassandra
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "describe keyspaces" ]
      interval: 10s
      timeout: 120s
      retries: 60
      start_period: 120s

  cassandra-schema:
    image: jaegertracing/jaeger-cassandra-schema
    container_name: cassandra_schema
    depends_on:
      cassandra:
        condition: service_healthy

  otel_collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel_collector
    volumes:
      - ${OTEL_COLLOR_CONFIG:-../configs/otel-collector-config.yml}:/etc/otelcol/otel-collector-config.yml
    command: --config /etc/otelcol/otel-collector-config.yml
    ports:
      - "4318:4318"
      - "8889:8889"
    depends_on:
      jaeger:
        condition: service_healthy
      prometheus:
        condition: service_started

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    user: ":"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/volumes_prometheus:/prometheus
      - ${PROMETHEUS_CONFIG:-../configs/prometheus.yml}:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    user: ":"
    environment:
      - TERM=linux
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-polystat-panel
    ports:
      - '3001:3000'
    volumes:
      - '${DOCKER_VOLUME_DIRECTORY:-.}/volumes/volumes_grafana:/var/lib/grafana'
    healthcheck:
      test: curl -f http://localhost:3000/api/health || exit 1
      interval: 10s
      timeout: 120s
      retries: 60
      start_period: 120s
